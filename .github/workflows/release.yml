name: Build & Release Chimera

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            file: chimera-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            file: chimera-macos
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            file: chimera-windows.exe

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.target }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Rename and zip binary
      run: |
        mkdir dist
        
        # Determine extension based on OS
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          EXT=".exe"
        else
          EXT=""
        fi
        
        # Copy the actual binary (named after package name in Cargo.toml)
        cp target/${{ matrix.target }}/release/chimera$EXT dist/${{ matrix.file }}
        
        # Zip it
        cd dist
        zip ${{ matrix.file }}.zip ${{ matrix.file }}
      shell: bash

    - name: Upload zipped binary to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/${{ matrix.file }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}